version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: financial-ls-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: financial_ls
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - financial-network

  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financial-ls-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/financial_ls
      - NEXTAUTH_URL=https://projects.linksystem.tech
      - NEXTAUTH_SECRET=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2
      - EMAIL_SERVER_HOST=smtp.gmail.com
      - EMAIL_SERVER_PORT=587
      - EMAIL_SERVER_USER=your-email@gmail.com
      - EMAIL_SERVER_PASSWORD=your-app-password
      - EMAIL_FROM=your-email@gmail.com
      - WHATSAPP_API_URL=
      - WHATSAPP_API_TOKEN=
      - UPLOAD_DIR=./uploads
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - postgres
    networks:
      - financial-network
    command: >
      sh -c "
        echo 'Aguardando banco de dados...' &&
        sleep 10 &&
        npx prisma migrate deploy &&
        echo 'Executando seed do banco...' &&
        npx tsx scripts/create-admin.ts &&
        echo 'Iniciando aplicação...' &&
        node server.js
      "

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  financial-network:
    driver: bridge